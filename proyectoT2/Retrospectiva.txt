RETROSPECTIVA



¿Cuáles fueron los mini-ciclos definidos? Justifíquenlos.
mini ciclo 1: Creación y eliminación de elementos, debido a que es la base o lo más pequeño
del proyecto pero que toma una gran importancia a la hora de realizar métodos mas complejos.
miniciclo2 : visualización de elementos, debido a que permiten tener una perspectiva más
tangible del proyecto.
mini ciclo 3: Consultas y verificación de estados ya que permite obtener información sobre
el estado del proyecto de forma más exacta que en la parte visual.
mini ciclo 4: movimiento de partículas, debido a que este es el siguiente paso a la hora
de aumentar las funcionalidades del proyecto
mini ciclo 5: pruebas , debido a que permite optimizar el proyecto y corregir/mejorar
aspectos que , en ocasiones, desde nuestra perspectiva no tenemos en cuenta.


¿Cuál es el estado actual del proyecto en términos de mini-ciclos? ¿por qué?
El proyecto está incompleto en el ciclo 3 debido a que no tuve en cuenta el método hole.

¿Cuál fue el tiempo total invertido por cada uno de ustedes?

25 horas.

¿Cuál consideran fue el mayor logro? ¿Por qué?
El mayor logro fue la implementación de la parte gráfica del proyecto. 

¿Cuál consideran que fue el mayor problema técnico? ¿Qué hicieron para resolverlo?

El mayor problema técnico fue la implementación de la lógica del canvas a la hora de dividir las partículas
por su respectivo color, debido a que tuve gran dificultad a la hora de posicionar correctamente
los elementos en un Canvas. Para solucionarlo, decidí hacer un borrador a papel del contenedor y del canvas y
ver como se ubicaban las partículas en base a sus posiciones con el simulador.


Considerando las prácticas XP incluídas en los laboratorios. ¿cuál fue la más útil? ¿por qué?

La más util fue la practica que expresa que todo el código debe de tener pruebas unitarias, esto se debe a que
cuando implemente estas pruebas observé falencias en algunos métodos implementados y esto me permitió mejorarlos.

¿Qué referencias usaron? ¿Cuál fue la más útil? Incluyan citas con estándares adecuados.

The Canvas Component. (s. f.). appinventor.org. http://www.appinventor.org/canvasComponent?flag=true 

Irfan, M. (2023, 12 octubre). Genere un número aleatorio dentro de un rango especificado en Java. Delft Stack.
https://www.delftstack.com/es/howto/java/java-random-number-in-range/ 
